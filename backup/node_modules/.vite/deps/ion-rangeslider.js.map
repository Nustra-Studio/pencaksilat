{
  "version": 3,
  "sources": ["../../ion-rangeslider/js/ion.rangeSlider.js"],
  "sourcesContent": ["// Ion.RangeSlider\n// version 2.3.1 Build: 382\n// © Denis Ineshin, 2019\n// https://github.com/IonDen\n//\n// Project page:    http://ionden.com/a/plugins/ion.rangeSlider/en.html\n// GitHub page:     https://github.com/IonDen/ion.rangeSlider\n//\n// Released under MIT licence:\n// http://ionden.com/a/plugins/licence-en.html\n// =====================================================================================================================\n\n;(function(factory) {\n    if ((typeof jQuery === 'undefined' || !jQuery) && typeof define === \"function\" && define.amd) {\n        define([\"jquery\"], function (jQuery) {\n            return factory(jQuery, document, window, navigator);\n        });\n    } else if ((typeof jQuery === 'undefined' || !jQuery) && typeof exports === \"object\") {\n        factory(require(\"jquery\"), document, window, navigator);\n    } else {\n        factory(jQuery, document, window, navigator);\n    }\n} (function ($, document, window, navigator, undefined) {\n    \"use strict\";\n\n    // =================================================================================================================\n    // Service\n\n    var plugin_count = 0;\n\n    // IE8 fix\n    var is_old_ie = (function () {\n        var n = navigator.userAgent,\n            r = /msie\\s\\d+/i,\n            v;\n        if (n.search(r) > 0) {\n            v = r.exec(n).toString();\n            v = v.split(\" \")[1];\n            if (v < 9) {\n                $(\"html\").addClass(\"lt-ie9\");\n                return true;\n            }\n        }\n        return false;\n    } ());\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function bind(that) {\n\n            var target = this;\n            var slice = [].slice;\n\n            if (typeof target != \"function\") {\n                throw new TypeError();\n            }\n\n            var args = slice.call(arguments, 1),\n                bound = function () {\n\n                    if (this instanceof bound) {\n\n                        var F = function(){};\n                        F.prototype = target.prototype;\n                        var self = new F();\n\n                        var result = target.apply(\n                            self,\n                            args.concat(slice.call(arguments))\n                        );\n                        if (Object(result) === result) {\n                            return result;\n                        }\n                        return self;\n\n                    } else {\n\n                        return target.apply(\n                            that,\n                            args.concat(slice.call(arguments))\n                        );\n\n                    }\n\n                };\n\n            return bound;\n        };\n    }\n    if (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function(searchElement, fromIndex) {\n            var k;\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var O = Object(this);\n            var len = O.length >>> 0;\n            if (len === 0) {\n                return -1;\n            }\n            var n = +fromIndex || 0;\n            if (Math.abs(n) === Infinity) {\n                n = 0;\n            }\n            if (n >= len) {\n                return -1;\n            }\n            k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n            while (k < len) {\n                if (k in O && O[k] === searchElement) {\n                    return k;\n                }\n                k++;\n            }\n            return -1;\n        };\n    }\n\n\n\n    // =================================================================================================================\n    // Template\n\n    var base_html =\n        '<span class=\"irs\">' +\n        '<span class=\"irs-line\" tabindex=\"0\"></span>' +\n        '<span class=\"irs-min\">0</span><span class=\"irs-max\">1</span>' +\n        '<span class=\"irs-from\">0</span><span class=\"irs-to\">0</span><span class=\"irs-single\">0</span>' +\n        '</span>' +\n        '<span class=\"irs-grid\"></span>';\n\n    var single_html =\n        '<span class=\"irs-bar irs-bar--single\"></span>' +\n        '<span class=\"irs-shadow shadow-single\"></span>' +\n        '<span class=\"irs-handle single\"><i></i><i></i><i></i></span>';\n\n    var double_html =\n        '<span class=\"irs-bar\"></span>' +\n        '<span class=\"irs-shadow shadow-from\"></span>' +\n        '<span class=\"irs-shadow shadow-to\"></span>' +\n        '<span class=\"irs-handle from\"><i></i><i></i><i></i></span>' +\n        '<span class=\"irs-handle to\"><i></i><i></i><i></i></span>';\n\n    var disable_html =\n        '<span class=\"irs-disable-mask\"></span>';\n\n\n\n    // =================================================================================================================\n    // Core\n\n    /**\n     * Main plugin constructor\n     *\n     * @param input {Object} link to base input element\n     * @param options {Object} slider config\n     * @param plugin_count {Number}\n     * @constructor\n     */\n    var IonRangeSlider = function (input, options, plugin_count) {\n        this.VERSION = \"2.3.1\";\n        this.input = input;\n        this.plugin_count = plugin_count;\n        this.current_plugin = 0;\n        this.calc_count = 0;\n        this.update_tm = 0;\n        this.old_from = 0;\n        this.old_to = 0;\n        this.old_min_interval = null;\n        this.raf_id = null;\n        this.dragging = false;\n        this.force_redraw = false;\n        this.no_diapason = false;\n        this.has_tab_index = true;\n        this.is_key = false;\n        this.is_update = false;\n        this.is_start = true;\n        this.is_finish = false;\n        this.is_active = false;\n        this.is_resize = false;\n        this.is_click = false;\n\n        options = options || {};\n\n        // cache for links to all DOM elements\n        this.$cache = {\n            win: $(window),\n            body: $(document.body),\n            input: $(input),\n            cont: null,\n            rs: null,\n            min: null,\n            max: null,\n            from: null,\n            to: null,\n            single: null,\n            bar: null,\n            line: null,\n            s_single: null,\n            s_from: null,\n            s_to: null,\n            shad_single: null,\n            shad_from: null,\n            shad_to: null,\n            edge: null,\n            grid: null,\n            grid_labels: []\n        };\n\n        // storage for measure variables\n        this.coords = {\n            // left\n            x_gap: 0,\n            x_pointer: 0,\n\n            // width\n            w_rs: 0,\n            w_rs_old: 0,\n            w_handle: 0,\n\n            // percents\n            p_gap: 0,\n            p_gap_left: 0,\n            p_gap_right: 0,\n            p_step: 0,\n            p_pointer: 0,\n            p_handle: 0,\n            p_single_fake: 0,\n            p_single_real: 0,\n            p_from_fake: 0,\n            p_from_real: 0,\n            p_to_fake: 0,\n            p_to_real: 0,\n            p_bar_x: 0,\n            p_bar_w: 0,\n\n            // grid\n            grid_gap: 0,\n            big_num: 0,\n            big: [],\n            big_w: [],\n            big_p: [],\n            big_x: []\n        };\n\n        // storage for labels measure variables\n        this.labels = {\n            // width\n            w_min: 0,\n            w_max: 0,\n            w_from: 0,\n            w_to: 0,\n            w_single: 0,\n\n            // percents\n            p_min: 0,\n            p_max: 0,\n            p_from_fake: 0,\n            p_from_left: 0,\n            p_to_fake: 0,\n            p_to_left: 0,\n            p_single_fake: 0,\n            p_single_left: 0\n        };\n\n\n\n        /**\n         * get and validate config\n         */\n        var $inp = this.$cache.input,\n            val = $inp.prop(\"value\"),\n            config, config_from_data, prop;\n\n        // default config\n        config = {\n            skin: \"flat\",\n            type: \"single\",\n\n            min: 10,\n            max: 100,\n            from: null,\n            to: null,\n            step: 1,\n\n            min_interval: 0,\n            max_interval: 0,\n            drag_interval: false,\n\n            values: [],\n            p_values: [],\n\n            from_fixed: false,\n            from_min: null,\n            from_max: null,\n            from_shadow: false,\n\n            to_fixed: false,\n            to_min: null,\n            to_max: null,\n            to_shadow: false,\n\n            prettify_enabled: true,\n            prettify_separator: \" \",\n            prettify: null,\n\n            force_edges: false,\n\n            keyboard: true,\n\n            grid: false,\n            grid_margin: true,\n            grid_num: 4,\n            grid_snap: false,\n\n            hide_min_max: false,\n            hide_from_to: false,\n\n            prefix: \"\",\n            postfix: \"\",\n            max_postfix: \"\",\n            decorate_both: true,\n            values_separator: \" — \",\n\n            input_values_separator: \";\",\n\n            disable: false,\n            block: false,\n\n            extra_classes: \"\",\n\n            scope: null,\n            onStart: null,\n            onChange: null,\n            onFinish: null,\n            onUpdate: null\n        };\n\n\n        // check if base element is input\n        if ($inp[0].nodeName !== \"INPUT\") {\n            console && console.warn && console.warn(\"Base element should be <input>!\", $inp[0]);\n        }\n\n\n        // config from data-attributes extends js config\n        config_from_data = {\n            skin: $inp.data(\"skin\"),\n            type: $inp.data(\"type\"),\n\n            min: $inp.data(\"min\"),\n            max: $inp.data(\"max\"),\n            from: $inp.data(\"from\"),\n            to: $inp.data(\"to\"),\n            step: $inp.data(\"step\"),\n\n            min_interval: $inp.data(\"minInterval\"),\n            max_interval: $inp.data(\"maxInterval\"),\n            drag_interval: $inp.data(\"dragInterval\"),\n\n            values: $inp.data(\"values\"),\n\n            from_fixed: $inp.data(\"fromFixed\"),\n            from_min: $inp.data(\"fromMin\"),\n            from_max: $inp.data(\"fromMax\"),\n            from_shadow: $inp.data(\"fromShadow\"),\n\n            to_fixed: $inp.data(\"toFixed\"),\n            to_min: $inp.data(\"toMin\"),\n            to_max: $inp.data(\"toMax\"),\n            to_shadow: $inp.data(\"toShadow\"),\n\n            prettify_enabled: $inp.data(\"prettifyEnabled\"),\n            prettify_separator: $inp.data(\"prettifySeparator\"),\n\n            force_edges: $inp.data(\"forceEdges\"),\n\n            keyboard: $inp.data(\"keyboard\"),\n\n            grid: $inp.data(\"grid\"),\n            grid_margin: $inp.data(\"gridMargin\"),\n            grid_num: $inp.data(\"gridNum\"),\n            grid_snap: $inp.data(\"gridSnap\"),\n\n            hide_min_max: $inp.data(\"hideMinMax\"),\n            hide_from_to: $inp.data(\"hideFromTo\"),\n\n            prefix: $inp.data(\"prefix\"),\n            postfix: $inp.data(\"postfix\"),\n            max_postfix: $inp.data(\"maxPostfix\"),\n            decorate_both: $inp.data(\"decorateBoth\"),\n            values_separator: $inp.data(\"valuesSeparator\"),\n\n            input_values_separator: $inp.data(\"inputValuesSeparator\"),\n\n            disable: $inp.data(\"disable\"),\n            block: $inp.data(\"block\"),\n\n            extra_classes: $inp.data(\"extraClasses\"),\n        };\n        config_from_data.values = config_from_data.values && config_from_data.values.split(\",\");\n\n        for (prop in config_from_data) {\n            if (config_from_data.hasOwnProperty(prop)) {\n                if (config_from_data[prop] === undefined || config_from_data[prop] === \"\") {\n                    delete config_from_data[prop];\n                }\n            }\n        }\n\n\n        // input value extends default config\n        if (val !== undefined && val !== \"\") {\n            val = val.split(config_from_data.input_values_separator || options.input_values_separator || \";\");\n\n            if (val[0] && val[0] == +val[0]) {\n                val[0] = +val[0];\n            }\n            if (val[1] && val[1] == +val[1]) {\n                val[1] = +val[1];\n            }\n\n            if (options && options.values && options.values.length) {\n                config.from = val[0] && options.values.indexOf(val[0]);\n                config.to = val[1] && options.values.indexOf(val[1]);\n            } else {\n                config.from = val[0] && +val[0];\n                config.to = val[1] && +val[1];\n            }\n        }\n\n\n\n        // js config extends default config\n        $.extend(config, options);\n\n\n        // data config extends config\n        $.extend(config, config_from_data);\n        this.options = config;\n\n\n\n        // validate config, to be sure that all data types are correct\n        this.update_check = {};\n        this.validate();\n\n\n\n        // default result object, returned to callbacks\n        this.result = {\n            input: this.$cache.input,\n            slider: null,\n\n            min: this.options.min,\n            max: this.options.max,\n\n            from: this.options.from,\n            from_percent: 0,\n            from_value: null,\n\n            to: this.options.to,\n            to_percent: 0,\n            to_value: null\n        };\n\n\n\n        this.init();\n    };\n\n    IonRangeSlider.prototype = {\n\n        /**\n         * Starts or updates the plugin instance\n         *\n         * @param [is_update] {boolean}\n         */\n        init: function (is_update) {\n            this.no_diapason = false;\n            this.coords.p_step = this.convertToPercent(this.options.step, true);\n\n            this.target = \"base\";\n\n            this.toggleInput();\n            this.append();\n            this.setMinMax();\n\n            if (is_update) {\n                this.force_redraw = true;\n                this.calc(true);\n\n                // callbacks called\n                this.callOnUpdate();\n            } else {\n                this.force_redraw = true;\n                this.calc(true);\n\n                // callbacks called\n                this.callOnStart();\n            }\n\n            this.updateScene();\n        },\n\n        /**\n         * Appends slider template to a DOM\n         */\n        append: function () {\n            var container_html = '<span class=\"irs irs--' + this.options.skin + ' js-irs-' + this.plugin_count + ' ' + this.options.extra_classes + '\"></span>';\n            this.$cache.input.before(container_html);\n            this.$cache.input.prop(\"readonly\", true);\n            this.$cache.cont = this.$cache.input.prev();\n            this.result.slider = this.$cache.cont;\n\n            this.$cache.cont.html(base_html);\n            this.$cache.rs = this.$cache.cont.find(\".irs\");\n            this.$cache.min = this.$cache.cont.find(\".irs-min\");\n            this.$cache.max = this.$cache.cont.find(\".irs-max\");\n            this.$cache.from = this.$cache.cont.find(\".irs-from\");\n            this.$cache.to = this.$cache.cont.find(\".irs-to\");\n            this.$cache.single = this.$cache.cont.find(\".irs-single\");\n            this.$cache.line = this.$cache.cont.find(\".irs-line\");\n            this.$cache.grid = this.$cache.cont.find(\".irs-grid\");\n\n            if (this.options.type === \"single\") {\n                this.$cache.cont.append(single_html);\n                this.$cache.bar = this.$cache.cont.find(\".irs-bar\");\n                this.$cache.edge = this.$cache.cont.find(\".irs-bar-edge\");\n                this.$cache.s_single = this.$cache.cont.find(\".single\");\n                this.$cache.from[0].style.visibility = \"hidden\";\n                this.$cache.to[0].style.visibility = \"hidden\";\n                this.$cache.shad_single = this.$cache.cont.find(\".shadow-single\");\n            } else {\n                this.$cache.cont.append(double_html);\n                this.$cache.bar = this.$cache.cont.find(\".irs-bar\");\n                this.$cache.s_from = this.$cache.cont.find(\".from\");\n                this.$cache.s_to = this.$cache.cont.find(\".to\");\n                this.$cache.shad_from = this.$cache.cont.find(\".shadow-from\");\n                this.$cache.shad_to = this.$cache.cont.find(\".shadow-to\");\n\n                this.setTopHandler();\n            }\n\n            if (this.options.hide_from_to) {\n                this.$cache.from[0].style.display = \"none\";\n                this.$cache.to[0].style.display = \"none\";\n                this.$cache.single[0].style.display = \"none\";\n            }\n\n            this.appendGrid();\n\n            if (this.options.disable) {\n                this.appendDisableMask();\n                this.$cache.input[0].disabled = true;\n            } else {\n                this.$cache.input[0].disabled = false;\n                this.removeDisableMask();\n                this.bindEvents();\n            }\n\n            // block only if not disabled\n            if (!this.options.disable) {\n                if (this.options.block) {\n                    this.appendDisableMask();\n                } else {\n                    this.removeDisableMask();\n                }\n            }\n\n            if (this.options.drag_interval) {\n                this.$cache.bar[0].style.cursor = \"ew-resize\";\n            }\n        },\n\n        /**\n         * Determine which handler has a priority\n         * works only for double slider type\n         */\n        setTopHandler: function () {\n            var min = this.options.min,\n                max = this.options.max,\n                from = this.options.from,\n                to = this.options.to;\n\n            if (from > min && to === max) {\n                this.$cache.s_from.addClass(\"type_last\");\n            } else if (to < max) {\n                this.$cache.s_to.addClass(\"type_last\");\n            }\n        },\n\n        /**\n         * Determine which handles was clicked last\n         * and which handler should have hover effect\n         *\n         * @param target {String}\n         */\n        changeLevel: function (target) {\n            switch (target) {\n                case \"single\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_single_fake);\n                    this.$cache.s_single.addClass(\"state_hover\");\n                    break;\n                case \"from\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake);\n                    this.$cache.s_from.addClass(\"state_hover\");\n                    this.$cache.s_from.addClass(\"type_last\");\n                    this.$cache.s_to.removeClass(\"type_last\");\n                    break;\n                case \"to\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_to_fake);\n                    this.$cache.s_to.addClass(\"state_hover\");\n                    this.$cache.s_to.addClass(\"type_last\");\n                    this.$cache.s_from.removeClass(\"type_last\");\n                    break;\n                case \"both\":\n                    this.coords.p_gap_left = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake);\n                    this.coords.p_gap_right = this.toFixed(this.coords.p_to_fake - this.coords.p_pointer);\n                    this.$cache.s_to.removeClass(\"type_last\");\n                    this.$cache.s_from.removeClass(\"type_last\");\n                    break;\n            }\n        },\n\n        /**\n         * Then slider is disabled\n         * appends extra layer with opacity\n         */\n        appendDisableMask: function () {\n            this.$cache.cont.append(disable_html);\n            this.$cache.cont.addClass(\"irs-disabled\");\n        },\n\n        /**\n         * Then slider is not disabled\n         * remove disable mask\n         */\n        removeDisableMask: function () {\n            this.$cache.cont.remove(\".irs-disable-mask\");\n            this.$cache.cont.removeClass(\"irs-disabled\");\n        },\n\n        /**\n         * Remove slider instance\n         * and unbind all events\n         */\n        remove: function () {\n            this.$cache.cont.remove();\n            this.$cache.cont = null;\n\n            this.$cache.line.off(\"keydown.irs_\" + this.plugin_count);\n\n            this.$cache.body.off(\"touchmove.irs_\" + this.plugin_count);\n            this.$cache.body.off(\"mousemove.irs_\" + this.plugin_count);\n\n            this.$cache.win.off(\"touchend.irs_\" + this.plugin_count);\n            this.$cache.win.off(\"mouseup.irs_\" + this.plugin_count);\n\n            if (is_old_ie) {\n                this.$cache.body.off(\"mouseup.irs_\" + this.plugin_count);\n                this.$cache.body.off(\"mouseleave.irs_\" + this.plugin_count);\n            }\n\n            this.$cache.grid_labels = [];\n            this.coords.big = [];\n            this.coords.big_w = [];\n            this.coords.big_p = [];\n            this.coords.big_x = [];\n\n            cancelAnimationFrame(this.raf_id);\n        },\n\n        /**\n         * bind all slider events\n         */\n        bindEvents: function () {\n            if (this.no_diapason) {\n                return;\n            }\n\n            this.$cache.body.on(\"touchmove.irs_\" + this.plugin_count, this.pointerMove.bind(this));\n            this.$cache.body.on(\"mousemove.irs_\" + this.plugin_count, this.pointerMove.bind(this));\n\n            this.$cache.win.on(\"touchend.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n            this.$cache.win.on(\"mouseup.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n\n            this.$cache.line.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            this.$cache.line.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n            this.$cache.line.on(\"focus.irs_\" + this.plugin_count, this.pointerFocus.bind(this));\n\n            if (this.options.drag_interval && this.options.type === \"double\") {\n                this.$cache.bar.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"both\"));\n                this.$cache.bar.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"both\"));\n            } else {\n                this.$cache.bar.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.bar.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            }\n\n            if (this.options.type === \"single\") {\n                this.$cache.single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.s_single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.shad_single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n                this.$cache.single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.s_single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.edge.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            } else {\n                this.$cache.single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, null));\n                this.$cache.single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, null));\n\n                this.$cache.from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.s_from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.s_to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.shad_from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n                this.$cache.from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.s_from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.s_to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.shad_from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            }\n\n            if (this.options.keyboard) {\n                this.$cache.line.on(\"keydown.irs_\" + this.plugin_count, this.key.bind(this, \"keyboard\"));\n            }\n\n            if (is_old_ie) {\n                this.$cache.body.on(\"mouseup.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n                this.$cache.body.on(\"mouseleave.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n            }\n        },\n\n        /**\n         * Focus with tabIndex\n         *\n         * @param e {Object} event object\n         */\n        pointerFocus: function (e) {\n            if (!this.target) {\n                var x;\n                var $handle;\n\n                if (this.options.type === \"single\") {\n                    $handle = this.$cache.single;\n                } else {\n                    $handle = this.$cache.from;\n                }\n\n                x = $handle.offset().left;\n                x += ($handle.width() / 2) - 1;\n\n                this.pointerClick(\"single\", {preventDefault: function () {}, pageX: x});\n            }\n        },\n\n        /**\n         * Mousemove or touchmove\n         * only for handlers\n         *\n         * @param e {Object} event object\n         */\n        pointerMove: function (e) {\n            if (!this.dragging) {\n                return;\n            }\n\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            this.coords.x_pointer = x - this.coords.x_gap;\n\n            this.calc();\n        },\n\n        /**\n         * Mouseup or touchend\n         * only for handlers\n         *\n         * @param e {Object} event object\n         */\n        pointerUp: function (e) {\n            if (this.current_plugin !== this.plugin_count) {\n                return;\n            }\n\n            if (this.is_active) {\n                this.is_active = false;\n            } else {\n                return;\n            }\n\n            this.$cache.cont.find(\".state_hover\").removeClass(\"state_hover\");\n\n            this.force_redraw = true;\n\n            if (is_old_ie) {\n                $(\"*\").prop(\"unselectable\", false);\n            }\n\n            this.updateScene();\n            this.restoreOriginalMinInterval();\n\n            // callbacks call\n            if ($.contains(this.$cache.cont[0], e.target) || this.dragging) {\n                this.callOnFinish();\n            }\n\n            this.dragging = false;\n        },\n\n        /**\n         * Mousedown or touchstart\n         * only for handlers\n         *\n         * @param target {String|null}\n         * @param e {Object} event object\n         */\n        pointerDown: function (target, e) {\n            e.preventDefault();\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            if (e.button === 2) {\n                return;\n            }\n\n            if (target === \"both\") {\n                this.setTempMinInterval();\n            }\n\n            if (!target) {\n                target = this.target || \"from\";\n            }\n\n            this.current_plugin = this.plugin_count;\n            this.target = target;\n\n            this.is_active = true;\n            this.dragging = true;\n\n            this.coords.x_gap = this.$cache.rs.offset().left;\n            this.coords.x_pointer = x - this.coords.x_gap;\n\n            this.calcPointerPercent();\n            this.changeLevel(target);\n\n            if (is_old_ie) {\n                $(\"*\").prop(\"unselectable\", true);\n            }\n\n            this.$cache.line.trigger(\"focus\");\n\n            this.updateScene();\n        },\n\n        /**\n         * Mousedown or touchstart\n         * for other slider elements, like diapason line\n         *\n         * @param target {String}\n         * @param e {Object} event object\n         */\n        pointerClick: function (target, e) {\n            e.preventDefault();\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            if (e.button === 2) {\n                return;\n            }\n\n            this.current_plugin = this.plugin_count;\n            this.target = target;\n\n            this.is_click = true;\n            this.coords.x_gap = this.$cache.rs.offset().left;\n            this.coords.x_pointer = +(x - this.coords.x_gap).toFixed();\n\n            this.force_redraw = true;\n            this.calc();\n\n            this.$cache.line.trigger(\"focus\");\n        },\n\n        /**\n         * Keyborard controls for focused slider\n         *\n         * @param target {String}\n         * @param e {Object} event object\n         * @returns {boolean|undefined}\n         */\n        key: function (target, e) {\n            if (this.current_plugin !== this.plugin_count || e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\n                return;\n            }\n\n            switch (e.which) {\n                case 83: // W\n                case 65: // A\n                case 40: // DOWN\n                case 37: // LEFT\n                    e.preventDefault();\n                    this.moveByKey(false);\n                    break;\n\n                case 87: // S\n                case 68: // D\n                case 38: // UP\n                case 39: // RIGHT\n                    e.preventDefault();\n                    this.moveByKey(true);\n                    break;\n            }\n\n            return true;\n        },\n\n        /**\n         * Move by key\n         *\n         * @param right {boolean} direction to move\n         */\n        moveByKey: function (right) {\n            var p = this.coords.p_pointer;\n            var p_step = (this.options.max - this.options.min) / 100;\n            p_step = this.options.step / p_step;\n\n            if (right) {\n                p += p_step;\n            } else {\n                p -= p_step;\n            }\n\n            this.coords.x_pointer = this.toFixed(this.coords.w_rs / 100 * p);\n            this.is_key = true;\n            this.calc();\n        },\n\n        /**\n         * Set visibility and content\n         * of Min and Max labels\n         */\n        setMinMax: function () {\n            if (!this.options) {\n                return;\n            }\n\n            if (this.options.hide_min_max) {\n                this.$cache.min[0].style.display = \"none\";\n                this.$cache.max[0].style.display = \"none\";\n                return;\n            }\n\n            if (this.options.values.length) {\n                this.$cache.min.html(this.decorate(this.options.p_values[this.options.min]));\n                this.$cache.max.html(this.decorate(this.options.p_values[this.options.max]));\n            } else {\n                var min_pretty = this._prettify(this.options.min);\n                var max_pretty = this._prettify(this.options.max);\n\n                this.result.min_pretty = min_pretty;\n                this.result.max_pretty = max_pretty;\n\n                this.$cache.min.html(this.decorate(min_pretty, this.options.min));\n                this.$cache.max.html(this.decorate(max_pretty, this.options.max));\n            }\n\n            this.labels.w_min = this.$cache.min.outerWidth(false);\n            this.labels.w_max = this.$cache.max.outerWidth(false);\n        },\n\n        /**\n         * Then dragging interval, prevent interval collapsing\n         * using min_interval option\n         */\n        setTempMinInterval: function () {\n            var interval = this.result.to - this.result.from;\n\n            if (this.old_min_interval === null) {\n                this.old_min_interval = this.options.min_interval;\n            }\n\n            this.options.min_interval = interval;\n        },\n\n        /**\n         * Restore min_interval option to original\n         */\n        restoreOriginalMinInterval: function () {\n            if (this.old_min_interval !== null) {\n                this.options.min_interval = this.old_min_interval;\n                this.old_min_interval = null;\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Calculations\n\n        /**\n         * All calculations and measures start here\n         *\n         * @param update {boolean=}\n         */\n        calc: function (update) {\n            if (!this.options) {\n                return;\n            }\n\n            this.calc_count++;\n\n            if (this.calc_count === 10 || update) {\n                this.calc_count = 0;\n                this.coords.w_rs = this.$cache.rs.outerWidth(false);\n\n                this.calcHandlePercent();\n            }\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            this.calcPointerPercent();\n            var handle_x = this.getHandleX();\n\n\n            if (this.target === \"both\") {\n                this.coords.p_gap = 0;\n                handle_x = this.getHandleX();\n            }\n\n            if (this.target === \"click\") {\n                this.coords.p_gap = this.coords.p_handle / 2;\n                handle_x = this.getHandleX();\n\n                if (this.options.drag_interval) {\n                    this.target = \"both_one\";\n                } else {\n                    this.target = this.chooseHandle(handle_x);\n                }\n            }\n\n            switch (this.target) {\n                case \"base\":\n                    var w = (this.options.max - this.options.min) / 100,\n                        f = (this.result.from - this.options.min) / w,\n                        t = (this.result.to - this.options.min) / w;\n\n                    this.coords.p_single_real = this.toFixed(f);\n                    this.coords.p_from_real = this.toFixed(f);\n                    this.coords.p_to_real = this.toFixed(t);\n\n                    this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n\n                    this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    this.target = null;\n\n                    break;\n\n                case \"single\":\n                    if (this.options.from_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_single_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_single_real = this.calcWithStep(this.coords.p_single_real);\n                    this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max);\n\n                    this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);\n\n                    break;\n\n                case \"from\":\n                    if (this.options.from_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_from_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real);\n                    if (this.coords.p_from_real > this.coords.p_to_real) {\n                        this.coords.p_from_real = this.coords.p_to_real;\n                    }\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n                    this.coords.p_from_real = this.checkMaxInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    break;\n\n                case \"to\":\n                    if (this.options.to_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_to_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real);\n                    if (this.coords.p_to_real < this.coords.p_from_real) {\n                        this.coords.p_to_real = this.coords.p_from_real;\n                    }\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n                    this.coords.p_to_real = this.checkMaxInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n\n                case \"both\":\n                    if (this.options.from_fixed || this.options.to_fixed) {\n                        break;\n                    }\n\n                    handle_x = this.toFixed(handle_x + (this.coords.p_handle * 0.001));\n\n                    this.coords.p_from_real = this.convertToRealPercent(handle_x) - this.coords.p_gap_left;\n                    this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    this.coords.p_to_real = this.convertToRealPercent(handle_x) + this.coords.p_gap_right;\n                    this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n\n                case \"both_one\":\n                    if (this.options.from_fixed || this.options.to_fixed) {\n                        break;\n                    }\n\n                    var real_x = this.convertToRealPercent(handle_x),\n                        from = this.result.from_percent,\n                        to = this.result.to_percent,\n                        full = to - from,\n                        half = full / 2,\n                        new_from = real_x - half,\n                        new_to = real_x + half;\n\n                    if (new_from < 0) {\n                        new_from = 0;\n                        new_to = new_from + full;\n                    }\n\n                    if (new_to > 100) {\n                        new_to = 100;\n                        new_from = new_to - full;\n                    }\n\n                    this.coords.p_from_real = this.calcWithStep(new_from);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    this.coords.p_to_real = this.calcWithStep(new_to);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n            }\n\n            if (this.options.type === \"single\") {\n                this.coords.p_bar_x = (this.coords.p_handle / 2);\n                this.coords.p_bar_w = this.coords.p_single_fake;\n\n                this.result.from_percent = this.coords.p_single_real;\n                this.result.from = this.convertToValue(this.coords.p_single_real);\n                this.result.from_pretty = this._prettify(this.result.from);\n\n                if (this.options.values.length) {\n                    this.result.from_value = this.options.values[this.result.from];\n                }\n            } else {\n                this.coords.p_bar_x = this.toFixed(this.coords.p_from_fake + (this.coords.p_handle / 2));\n                this.coords.p_bar_w = this.toFixed(this.coords.p_to_fake - this.coords.p_from_fake);\n\n                this.result.from_percent = this.coords.p_from_real;\n                this.result.from = this.convertToValue(this.coords.p_from_real);\n                this.result.from_pretty = this._prettify(this.result.from);\n                this.result.to_percent = this.coords.p_to_real;\n                this.result.to = this.convertToValue(this.coords.p_to_real);\n                this.result.to_pretty = this._prettify(this.result.to);\n\n                if (this.options.values.length) {\n                    this.result.from_value = this.options.values[this.result.from];\n                    this.result.to_value = this.options.values[this.result.to];\n                }\n            }\n\n            this.calcMinMax();\n            this.calcLabels();\n        },\n\n\n        /**\n         * calculates pointer X in percent\n         */\n        calcPointerPercent: function () {\n            if (!this.coords.w_rs) {\n                this.coords.p_pointer = 0;\n                return;\n            }\n\n            if (this.coords.x_pointer < 0 || isNaN(this.coords.x_pointer)  ) {\n                this.coords.x_pointer = 0;\n            } else if (this.coords.x_pointer > this.coords.w_rs) {\n                this.coords.x_pointer = this.coords.w_rs;\n            }\n\n            this.coords.p_pointer = this.toFixed(this.coords.x_pointer / this.coords.w_rs * 100);\n        },\n\n        convertToRealPercent: function (fake) {\n            var full = 100 - this.coords.p_handle;\n            return fake / full * 100;\n        },\n\n        convertToFakePercent: function (real) {\n            var full = 100 - this.coords.p_handle;\n            return real / 100 * full;\n        },\n\n        getHandleX: function () {\n            var max = 100 - this.coords.p_handle,\n                x = this.toFixed(this.coords.p_pointer - this.coords.p_gap);\n\n            if (x < 0) {\n                x = 0;\n            } else if (x > max) {\n                x = max;\n            }\n\n            return x;\n        },\n\n        calcHandlePercent: function () {\n            if (this.options.type === \"single\") {\n                this.coords.w_handle = this.$cache.s_single.outerWidth(false);\n            } else {\n                this.coords.w_handle = this.$cache.s_from.outerWidth(false);\n            }\n\n            this.coords.p_handle = this.toFixed(this.coords.w_handle / this.coords.w_rs * 100);\n        },\n\n        /**\n         * Find closest handle to pointer click\n         *\n         * @param real_x {Number}\n         * @returns {String}\n         */\n        chooseHandle: function (real_x) {\n            if (this.options.type === \"single\") {\n                return \"single\";\n            } else {\n                var m_point = this.coords.p_from_real + ((this.coords.p_to_real - this.coords.p_from_real) / 2);\n                if (real_x >= m_point) {\n                    return this.options.to_fixed ? \"from\" : \"to\";\n                } else {\n                    return this.options.from_fixed ? \"to\" : \"from\";\n                }\n            }\n        },\n\n        /**\n         * Measure Min and Max labels width in percent\n         */\n        calcMinMax: function () {\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            this.labels.p_min = this.labels.w_min / this.coords.w_rs * 100;\n            this.labels.p_max = this.labels.w_max / this.coords.w_rs * 100;\n        },\n\n        /**\n         * Measure labels width and X in percent\n         */\n        calcLabels: function () {\n            if (!this.coords.w_rs || this.options.hide_from_to) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n\n                this.labels.w_single = this.$cache.single.outerWidth(false);\n                this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100;\n                this.labels.p_single_left = this.coords.p_single_fake + (this.coords.p_handle / 2) - (this.labels.p_single_fake / 2);\n                this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake);\n\n            } else {\n\n                this.labels.w_from = this.$cache.from.outerWidth(false);\n                this.labels.p_from_fake = this.labels.w_from / this.coords.w_rs * 100;\n                this.labels.p_from_left = this.coords.p_from_fake + (this.coords.p_handle / 2) - (this.labels.p_from_fake / 2);\n                this.labels.p_from_left = this.toFixed(this.labels.p_from_left);\n                this.labels.p_from_left = this.checkEdges(this.labels.p_from_left, this.labels.p_from_fake);\n\n                this.labels.w_to = this.$cache.to.outerWidth(false);\n                this.labels.p_to_fake = this.labels.w_to / this.coords.w_rs * 100;\n                this.labels.p_to_left = this.coords.p_to_fake + (this.coords.p_handle / 2) - (this.labels.p_to_fake / 2);\n                this.labels.p_to_left = this.toFixed(this.labels.p_to_left);\n                this.labels.p_to_left = this.checkEdges(this.labels.p_to_left, this.labels.p_to_fake);\n\n                this.labels.w_single = this.$cache.single.outerWidth(false);\n                this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100;\n                this.labels.p_single_left = ((this.labels.p_from_left + this.labels.p_to_left + this.labels.p_to_fake) / 2) - (this.labels.p_single_fake / 2);\n                this.labels.p_single_left = this.toFixed(this.labels.p_single_left);\n                this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake);\n\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Drawings\n\n        /**\n         * Main function called in request animation frame\n         * to update everything\n         */\n        updateScene: function () {\n            if (this.raf_id) {\n                cancelAnimationFrame(this.raf_id);\n                this.raf_id = null;\n            }\n\n            clearTimeout(this.update_tm);\n            this.update_tm = null;\n\n            if (!this.options) {\n                return;\n            }\n\n            this.drawHandles();\n\n            if (this.is_active) {\n                this.raf_id = requestAnimationFrame(this.updateScene.bind(this));\n            } else {\n                this.update_tm = setTimeout(this.updateScene.bind(this), 300);\n            }\n        },\n\n        /**\n         * Draw handles\n         */\n        drawHandles: function () {\n            this.coords.w_rs = this.$cache.rs.outerWidth(false);\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (this.coords.w_rs !== this.coords.w_rs_old) {\n                this.target = \"base\";\n                this.is_resize = true;\n            }\n\n            if (this.coords.w_rs !== this.coords.w_rs_old || this.force_redraw) {\n                this.setMinMax();\n                this.calc(true);\n                this.drawLabels();\n                if (this.options.grid) {\n                    this.calcGridMargin();\n                    this.calcGridLabels();\n                }\n                this.force_redraw = true;\n                this.coords.w_rs_old = this.coords.w_rs;\n                this.drawShadow();\n            }\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (!this.dragging && !this.force_redraw && !this.is_key) {\n                return;\n            }\n\n            if (this.old_from !== this.result.from || this.old_to !== this.result.to || this.force_redraw || this.is_key) {\n\n                this.drawLabels();\n\n                this.$cache.bar[0].style.left = this.coords.p_bar_x + \"%\";\n                this.$cache.bar[0].style.width = this.coords.p_bar_w + \"%\";\n\n                if (this.options.type === \"single\") {\n                    this.$cache.bar[0].style.left = 0;\n                    this.$cache.bar[0].style.width = this.coords.p_bar_w + this.coords.p_bar_x + \"%\";\n\n                    this.$cache.s_single[0].style.left = this.coords.p_single_fake + \"%\";\n\n                    this.$cache.single[0].style.left = this.labels.p_single_left + \"%\";\n                } else {\n                    this.$cache.s_from[0].style.left = this.coords.p_from_fake + \"%\";\n                    this.$cache.s_to[0].style.left = this.coords.p_to_fake + \"%\";\n\n                    if (this.old_from !== this.result.from || this.force_redraw) {\n                        this.$cache.from[0].style.left = this.labels.p_from_left + \"%\";\n                    }\n                    if (this.old_to !== this.result.to || this.force_redraw) {\n                        this.$cache.to[0].style.left = this.labels.p_to_left + \"%\";\n                    }\n\n                    this.$cache.single[0].style.left = this.labels.p_single_left + \"%\";\n                }\n\n                this.writeToInput();\n\n                if ((this.old_from !== this.result.from || this.old_to !== this.result.to) && !this.is_start) {\n                    this.$cache.input.trigger(\"change\");\n                    this.$cache.input.trigger(\"input\");\n                }\n\n                this.old_from = this.result.from;\n                this.old_to = this.result.to;\n\n                // callbacks call\n                if (!this.is_resize && !this.is_update && !this.is_start && !this.is_finish) {\n                    this.callOnChange();\n                }\n                if (this.is_key || this.is_click) {\n                    this.is_key = false;\n                    this.is_click = false;\n                    this.callOnFinish();\n                }\n\n                this.is_update = false;\n                this.is_resize = false;\n                this.is_finish = false;\n            }\n\n            this.is_start = false;\n            this.is_key = false;\n            this.is_click = false;\n            this.force_redraw = false;\n        },\n\n        /**\n         * Draw labels\n         * measure labels collisions\n         * collapse close labels\n         */\n        drawLabels: function () {\n            if (!this.options) {\n                return;\n            }\n\n            var values_num = this.options.values.length;\n            var p_values = this.options.p_values;\n            var text_single;\n            var text_from;\n            var text_to;\n            var from_pretty;\n            var to_pretty;\n\n            if (this.options.hide_from_to) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n\n                if (values_num) {\n                    text_single = this.decorate(p_values[this.result.from]);\n                    this.$cache.single.html(text_single);\n                } else {\n                    from_pretty = this._prettify(this.result.from);\n\n                    text_single = this.decorate(from_pretty, this.result.from);\n                    this.$cache.single.html(text_single);\n                }\n\n                this.calcLabels();\n\n                if (this.labels.p_single_left < this.labels.p_min + 1) {\n                    this.$cache.min[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.min[0].style.visibility = \"visible\";\n                }\n\n                if (this.labels.p_single_left + this.labels.p_single_fake > 100 - this.labels.p_max - 1) {\n                    this.$cache.max[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.max[0].style.visibility = \"visible\";\n                }\n\n            } else {\n\n                if (values_num) {\n\n                    if (this.options.decorate_both) {\n                        text_single = this.decorate(p_values[this.result.from]);\n                        text_single += this.options.values_separator;\n                        text_single += this.decorate(p_values[this.result.to]);\n                    } else {\n                        text_single = this.decorate(p_values[this.result.from] + this.options.values_separator + p_values[this.result.to]);\n                    }\n                    text_from = this.decorate(p_values[this.result.from]);\n                    text_to = this.decorate(p_values[this.result.to]);\n\n                    this.$cache.single.html(text_single);\n                    this.$cache.from.html(text_from);\n                    this.$cache.to.html(text_to);\n\n                } else {\n                    from_pretty = this._prettify(this.result.from);\n                    to_pretty = this._prettify(this.result.to);\n\n                    if (this.options.decorate_both) {\n                        text_single = this.decorate(from_pretty, this.result.from);\n                        text_single += this.options.values_separator;\n                        text_single += this.decorate(to_pretty, this.result.to);\n                    } else {\n                        text_single = this.decorate(from_pretty + this.options.values_separator + to_pretty, this.result.to);\n                    }\n                    text_from = this.decorate(from_pretty, this.result.from);\n                    text_to = this.decorate(to_pretty, this.result.to);\n\n                    this.$cache.single.html(text_single);\n                    this.$cache.from.html(text_from);\n                    this.$cache.to.html(text_to);\n\n                }\n\n                this.calcLabels();\n\n                var min = Math.min(this.labels.p_single_left, this.labels.p_from_left),\n                    single_left = this.labels.p_single_left + this.labels.p_single_fake,\n                    to_left = this.labels.p_to_left + this.labels.p_to_fake,\n                    max = Math.max(single_left, to_left);\n\n                if (this.labels.p_from_left + this.labels.p_from_fake >= this.labels.p_to_left) {\n                    this.$cache.from[0].style.visibility = \"hidden\";\n                    this.$cache.to[0].style.visibility = \"hidden\";\n                    this.$cache.single[0].style.visibility = \"visible\";\n\n                    if (this.result.from === this.result.to) {\n                        if (this.target === \"from\") {\n                            this.$cache.from[0].style.visibility = \"visible\";\n                        } else if (this.target === \"to\") {\n                            this.$cache.to[0].style.visibility = \"visible\";\n                        } else if (!this.target) {\n                            this.$cache.from[0].style.visibility = \"visible\";\n                        }\n                        this.$cache.single[0].style.visibility = \"hidden\";\n                        max = to_left;\n                    } else {\n                        this.$cache.from[0].style.visibility = \"hidden\";\n                        this.$cache.to[0].style.visibility = \"hidden\";\n                        this.$cache.single[0].style.visibility = \"visible\";\n                        max = Math.max(single_left, to_left);\n                    }\n                } else {\n                    this.$cache.from[0].style.visibility = \"visible\";\n                    this.$cache.to[0].style.visibility = \"visible\";\n                    this.$cache.single[0].style.visibility = \"hidden\";\n                }\n\n                if (min < this.labels.p_min + 1) {\n                    this.$cache.min[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.min[0].style.visibility = \"visible\";\n                }\n\n                if (max > 100 - this.labels.p_max - 1) {\n                    this.$cache.max[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.max[0].style.visibility = \"visible\";\n                }\n\n            }\n        },\n\n        /**\n         * Draw shadow intervals\n         */\n        drawShadow: function () {\n            var o = this.options,\n                c = this.$cache,\n\n                is_from_min = typeof o.from_min === \"number\" && !isNaN(o.from_min),\n                is_from_max = typeof o.from_max === \"number\" && !isNaN(o.from_max),\n                is_to_min = typeof o.to_min === \"number\" && !isNaN(o.to_min),\n                is_to_max = typeof o.to_max === \"number\" && !isNaN(o.to_max),\n\n                from_min,\n                from_max,\n                to_min,\n                to_max;\n\n            if (o.type === \"single\") {\n                if (o.from_shadow && (is_from_min || is_from_max)) {\n                    from_min = this.convertToPercent(is_from_min ? o.from_min : o.min);\n                    from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\n                    from_min = this.toFixed(from_min - (this.coords.p_handle / 100 * from_min));\n                    from_max = this.toFixed(from_max - (this.coords.p_handle / 100 * from_max));\n                    from_min = from_min + (this.coords.p_handle / 2);\n\n                    c.shad_single[0].style.display = \"block\";\n                    c.shad_single[0].style.left = from_min + \"%\";\n                    c.shad_single[0].style.width = from_max + \"%\";\n                } else {\n                    c.shad_single[0].style.display = \"none\";\n                }\n            } else {\n                if (o.from_shadow && (is_from_min || is_from_max)) {\n                    from_min = this.convertToPercent(is_from_min ? o.from_min : o.min);\n                    from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\n                    from_min = this.toFixed(from_min - (this.coords.p_handle / 100 * from_min));\n                    from_max = this.toFixed(from_max - (this.coords.p_handle / 100 * from_max));\n                    from_min = from_min + (this.coords.p_handle / 2);\n\n                    c.shad_from[0].style.display = \"block\";\n                    c.shad_from[0].style.left = from_min + \"%\";\n                    c.shad_from[0].style.width = from_max + \"%\";\n                } else {\n                    c.shad_from[0].style.display = \"none\";\n                }\n\n                if (o.to_shadow && (is_to_min || is_to_max)) {\n                    to_min = this.convertToPercent(is_to_min ? o.to_min : o.min);\n                    to_max = this.convertToPercent(is_to_max ? o.to_max : o.max) - to_min;\n                    to_min = this.toFixed(to_min - (this.coords.p_handle / 100 * to_min));\n                    to_max = this.toFixed(to_max - (this.coords.p_handle / 100 * to_max));\n                    to_min = to_min + (this.coords.p_handle / 2);\n\n                    c.shad_to[0].style.display = \"block\";\n                    c.shad_to[0].style.left = to_min + \"%\";\n                    c.shad_to[0].style.width = to_max + \"%\";\n                } else {\n                    c.shad_to[0].style.display = \"none\";\n                }\n            }\n        },\n\n\n\n        /**\n         * Write values to input element\n         */\n        writeToInput: function () {\n            if (this.options.type === \"single\") {\n                if (this.options.values.length) {\n                    this.$cache.input.prop(\"value\", this.result.from_value);\n                } else {\n                    this.$cache.input.prop(\"value\", this.result.from);\n                }\n                this.$cache.input.data(\"from\", this.result.from);\n            } else {\n                if (this.options.values.length) {\n                    this.$cache.input.prop(\"value\", this.result.from_value + this.options.input_values_separator + this.result.to_value);\n                } else {\n                    this.$cache.input.prop(\"value\", this.result.from + this.options.input_values_separator + this.result.to);\n                }\n                this.$cache.input.data(\"from\", this.result.from);\n                this.$cache.input.data(\"to\", this.result.to);\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Callbacks\n\n        callOnStart: function () {\n            this.writeToInput();\n\n            if (this.options.onStart && typeof this.options.onStart === \"function\") {\n                if (this.options.scope) {\n                    this.options.onStart.call(this.options.scope, this.result);\n                } else {\n                    this.options.onStart(this.result);\n                }\n            }\n        },\n        callOnChange: function () {\n            this.writeToInput();\n\n            if (this.options.onChange && typeof this.options.onChange === \"function\") {\n                if (this.options.scope) {\n                    this.options.onChange.call(this.options.scope, this.result);\n                } else {\n                    this.options.onChange(this.result);\n                }\n            }\n        },\n        callOnFinish: function () {\n            this.writeToInput();\n\n            if (this.options.onFinish && typeof this.options.onFinish === \"function\") {\n                if (this.options.scope) {\n                    this.options.onFinish.call(this.options.scope, this.result);\n                } else {\n                    this.options.onFinish(this.result);\n                }\n            }\n        },\n        callOnUpdate: function () {\n            this.writeToInput();\n\n            if (this.options.onUpdate && typeof this.options.onUpdate === \"function\") {\n                if (this.options.scope) {\n                    this.options.onUpdate.call(this.options.scope, this.result);\n                } else {\n                    this.options.onUpdate(this.result);\n                }\n            }\n        },\n\n\n\n\n        // =============================================================================================================\n        // Service methods\n\n        toggleInput: function () {\n            this.$cache.input.toggleClass(\"irs-hidden-input\");\n\n            if (this.has_tab_index) {\n                this.$cache.input.prop(\"tabindex\", -1);\n            } else {\n                this.$cache.input.removeProp(\"tabindex\");\n            }\n\n            this.has_tab_index = !this.has_tab_index;\n        },\n\n        /**\n         * Convert real value to percent\n         *\n         * @param value {Number} X in real\n         * @param no_min {boolean=} don't use min value\n         * @returns {Number} X in percent\n         */\n        convertToPercent: function (value, no_min) {\n            var diapason = this.options.max - this.options.min,\n                one_percent = diapason / 100,\n                val, percent;\n\n            if (!diapason) {\n                this.no_diapason = true;\n                return 0;\n            }\n\n            if (no_min) {\n                val = value;\n            } else {\n                val = value - this.options.min;\n            }\n\n            percent = val / one_percent;\n\n            return this.toFixed(percent);\n        },\n\n        /**\n         * Convert percent to real values\n         *\n         * @param percent {Number} X in percent\n         * @returns {Number} X in real\n         */\n        convertToValue: function (percent) {\n            var min = this.options.min,\n                max = this.options.max,\n                min_decimals = min.toString().split(\".\")[1],\n                max_decimals = max.toString().split(\".\")[1],\n                min_length, max_length,\n                avg_decimals = 0,\n                abs = 0;\n\n            if (percent === 0) {\n                return this.options.min;\n            }\n            if (percent === 100) {\n                return this.options.max;\n            }\n\n\n            if (min_decimals) {\n                min_length = min_decimals.length;\n                avg_decimals = min_length;\n            }\n            if (max_decimals) {\n                max_length = max_decimals.length;\n                avg_decimals = max_length;\n            }\n            if (min_length && max_length) {\n                avg_decimals = (min_length >= max_length) ? min_length : max_length;\n            }\n\n            if (min < 0) {\n                abs = Math.abs(min);\n                min = +(min + abs).toFixed(avg_decimals);\n                max = +(max + abs).toFixed(avg_decimals);\n            }\n\n            var number = ((max - min) / 100 * percent) + min,\n                string = this.options.step.toString().split(\".\")[1],\n                result;\n\n            if (string) {\n                number = +number.toFixed(string.length);\n            } else {\n                number = number / this.options.step;\n                number = number * this.options.step;\n\n                number = +number.toFixed(0);\n            }\n\n            if (abs) {\n                number -= abs;\n            }\n\n            if (string) {\n                result = +number.toFixed(string.length);\n            } else {\n                result = this.toFixed(number);\n            }\n\n            if (result < this.options.min) {\n                result = this.options.min;\n            } else if (result > this.options.max) {\n                result = this.options.max;\n            }\n\n            return result;\n        },\n\n        /**\n         * Round percent value with step\n         *\n         * @param percent {Number}\n         * @returns percent {Number} rounded\n         */\n        calcWithStep: function (percent) {\n            var rounded = Math.round(percent / this.coords.p_step) * this.coords.p_step;\n\n            if (rounded > 100) {\n                rounded = 100;\n            }\n            if (percent === 100) {\n                rounded = 100;\n            }\n\n            return this.toFixed(rounded);\n        },\n\n        checkMinInterval: function (p_current, p_next, type) {\n            var o = this.options,\n                current,\n                next;\n\n            if (!o.min_interval) {\n                return p_current;\n            }\n\n            current = this.convertToValue(p_current);\n            next = this.convertToValue(p_next);\n\n            if (type === \"from\") {\n\n                if (next - current < o.min_interval) {\n                    current = next - o.min_interval;\n                }\n\n            } else {\n\n                if (current - next < o.min_interval) {\n                    current = next + o.min_interval;\n                }\n\n            }\n\n            return this.convertToPercent(current);\n        },\n\n        checkMaxInterval: function (p_current, p_next, type) {\n            var o = this.options,\n                current,\n                next;\n\n            if (!o.max_interval) {\n                return p_current;\n            }\n\n            current = this.convertToValue(p_current);\n            next = this.convertToValue(p_next);\n\n            if (type === \"from\") {\n\n                if (next - current > o.max_interval) {\n                    current = next - o.max_interval;\n                }\n\n            } else {\n\n                if (current - next > o.max_interval) {\n                    current = next + o.max_interval;\n                }\n\n            }\n\n            return this.convertToPercent(current);\n        },\n\n        checkDiapason: function (p_num, min, max) {\n            var num = this.convertToValue(p_num),\n                o = this.options;\n\n            if (typeof min !== \"number\") {\n                min = o.min;\n            }\n\n            if (typeof max !== \"number\") {\n                max = o.max;\n            }\n\n            if (num < min) {\n                num = min;\n            }\n\n            if (num > max) {\n                num = max;\n            }\n\n            return this.convertToPercent(num);\n        },\n\n        toFixed: function (num) {\n            num = num.toFixed(20);\n            return +num;\n        },\n\n        _prettify: function (num) {\n            if (!this.options.prettify_enabled) {\n                return num;\n            }\n\n            if (this.options.prettify && typeof this.options.prettify === \"function\") {\n                return this.options.prettify(num);\n            } else {\n                return this.prettify(num);\n            }\n        },\n\n        prettify: function (num) {\n            var n = num.toString();\n            return n.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, \"$1\" + this.options.prettify_separator);\n        },\n\n        checkEdges: function (left, width) {\n            if (!this.options.force_edges) {\n                return this.toFixed(left);\n            }\n\n            if (left < 0) {\n                left = 0;\n            } else if (left > 100 - width) {\n                left = 100 - width;\n            }\n\n            return this.toFixed(left);\n        },\n\n        validate: function () {\n            var o = this.options,\n                r = this.result,\n                v = o.values,\n                vl = v.length,\n                value,\n                i;\n\n            if (typeof o.min === \"string\") o.min = +o.min;\n            if (typeof o.max === \"string\") o.max = +o.max;\n            if (typeof o.from === \"string\") o.from = +o.from;\n            if (typeof o.to === \"string\") o.to = +o.to;\n            if (typeof o.step === \"string\") o.step = +o.step;\n\n            if (typeof o.from_min === \"string\") o.from_min = +o.from_min;\n            if (typeof o.from_max === \"string\") o.from_max = +o.from_max;\n            if (typeof o.to_min === \"string\") o.to_min = +o.to_min;\n            if (typeof o.to_max === \"string\") o.to_max = +o.to_max;\n\n            if (typeof o.grid_num === \"string\") o.grid_num = +o.grid_num;\n\n            if (o.max < o.min) {\n                o.max = o.min;\n            }\n\n            if (vl) {\n                o.p_values = [];\n                o.min = 0;\n                o.max = vl - 1;\n                o.step = 1;\n                o.grid_num = o.max;\n                o.grid_snap = true;\n\n                for (i = 0; i < vl; i++) {\n                    value = +v[i];\n\n                    if (!isNaN(value)) {\n                        v[i] = value;\n                        value = this._prettify(value);\n                    } else {\n                        value = v[i];\n                    }\n\n                    o.p_values.push(value);\n                }\n            }\n\n            if (typeof o.from !== \"number\" || isNaN(o.from)) {\n                o.from = o.min;\n            }\n\n            if (typeof o.to !== \"number\" || isNaN(o.to)) {\n                o.to = o.max;\n            }\n\n            if (o.type === \"single\") {\n\n                if (o.from < o.min) o.from = o.min;\n                if (o.from > o.max) o.from = o.max;\n\n            } else {\n\n                if (o.from < o.min) o.from = o.min;\n                if (o.from > o.max) o.from = o.max;\n\n                if (o.to < o.min) o.to = o.min;\n                if (o.to > o.max) o.to = o.max;\n\n                if (this.update_check.from) {\n\n                    if (this.update_check.from !== o.from) {\n                        if (o.from > o.to) o.from = o.to;\n                    }\n                    if (this.update_check.to !== o.to) {\n                        if (o.to < o.from) o.to = o.from;\n                    }\n\n                }\n\n                if (o.from > o.to) o.from = o.to;\n                if (o.to < o.from) o.to = o.from;\n\n            }\n\n            if (typeof o.step !== \"number\" || isNaN(o.step) || !o.step || o.step < 0) {\n                o.step = 1;\n            }\n\n            if (typeof o.from_min === \"number\" && o.from < o.from_min) {\n                o.from = o.from_min;\n            }\n\n            if (typeof o.from_max === \"number\" && o.from > o.from_max) {\n                o.from = o.from_max;\n            }\n\n            if (typeof o.to_min === \"number\" && o.to < o.to_min) {\n                o.to = o.to_min;\n            }\n\n            if (typeof o.to_max === \"number\" && o.from > o.to_max) {\n                o.to = o.to_max;\n            }\n\n            if (r) {\n                if (r.min !== o.min) {\n                    r.min = o.min;\n                }\n\n                if (r.max !== o.max) {\n                    r.max = o.max;\n                }\n\n                if (r.from < r.min || r.from > r.max) {\n                    r.from = o.from;\n                }\n\n                if (r.to < r.min || r.to > r.max) {\n                    r.to = o.to;\n                }\n            }\n\n            if (typeof o.min_interval !== \"number\" || isNaN(o.min_interval) || !o.min_interval || o.min_interval < 0) {\n                o.min_interval = 0;\n            }\n\n            if (typeof o.max_interval !== \"number\" || isNaN(o.max_interval) || !o.max_interval || o.max_interval < 0) {\n                o.max_interval = 0;\n            }\n\n            if (o.min_interval && o.min_interval > o.max - o.min) {\n                o.min_interval = o.max - o.min;\n            }\n\n            if (o.max_interval && o.max_interval > o.max - o.min) {\n                o.max_interval = o.max - o.min;\n            }\n        },\n\n        decorate: function (num, original) {\n            var decorated = \"\",\n                o = this.options;\n\n            if (o.prefix) {\n                decorated += o.prefix;\n            }\n\n            decorated += num;\n\n            if (o.max_postfix) {\n                if (o.values.length && num === o.p_values[o.max]) {\n                    decorated += o.max_postfix;\n                    if (o.postfix) {\n                        decorated += \" \";\n                    }\n                } else if (original === o.max) {\n                    decorated += o.max_postfix;\n                    if (o.postfix) {\n                        decorated += \" \";\n                    }\n                }\n            }\n\n            if (o.postfix) {\n                decorated += o.postfix;\n            }\n\n            return decorated;\n        },\n\n        updateFrom: function () {\n            this.result.from = this.options.from;\n            this.result.from_percent = this.convertToPercent(this.result.from);\n            this.result.from_pretty = this._prettify(this.result.from);\n            if (this.options.values) {\n                this.result.from_value = this.options.values[this.result.from];\n            }\n        },\n\n        updateTo: function () {\n            this.result.to = this.options.to;\n            this.result.to_percent = this.convertToPercent(this.result.to);\n            this.result.to_pretty = this._prettify(this.result.to);\n            if (this.options.values) {\n                this.result.to_value = this.options.values[this.result.to];\n            }\n        },\n\n        updateResult: function () {\n            this.result.min = this.options.min;\n            this.result.max = this.options.max;\n            this.updateFrom();\n            this.updateTo();\n        },\n\n\n        // =============================================================================================================\n        // Grid\n\n        appendGrid: function () {\n            if (!this.options.grid) {\n                return;\n            }\n\n            var o = this.options,\n                i, z,\n\n                total = o.max - o.min,\n                big_num = o.grid_num,\n                big_p = 0,\n                big_w = 0,\n\n                small_max = 4,\n                local_small_max,\n                small_p,\n                small_w = 0,\n\n                result,\n                html = '';\n\n\n\n            this.calcGridMargin();\n\n            if (o.grid_snap) {\n                big_num = total / o.step;\n            }\n\n            if (big_num > 50) big_num = 50;\n            big_p = this.toFixed(100 / big_num);\n\n            if (big_num > 4) {\n                small_max = 3;\n            }\n            if (big_num > 7) {\n                small_max = 2;\n            }\n            if (big_num > 14) {\n                small_max = 1;\n            }\n            if (big_num > 28) {\n                small_max = 0;\n            }\n\n            for (i = 0; i < big_num + 1; i++) {\n                local_small_max = small_max;\n\n                big_w = this.toFixed(big_p * i);\n\n                if (big_w > 100) {\n                    big_w = 100;\n                }\n                this.coords.big[i] = big_w;\n\n                small_p = (big_w - (big_p * (i - 1))) / (local_small_max + 1);\n\n                for (z = 1; z <= local_small_max; z++) {\n                    if (big_w === 0) {\n                        break;\n                    }\n\n                    small_w = this.toFixed(big_w - (small_p * z));\n\n                    html += '<span class=\"irs-grid-pol small\" style=\"left: ' + small_w + '%\"></span>';\n                }\n\n                html += '<span class=\"irs-grid-pol\" style=\"left: ' + big_w + '%\"></span>';\n\n                result = this.convertToValue(big_w);\n                if (o.values.length) {\n                    result = o.p_values[result];\n                } else {\n                    result = this._prettify(result);\n                }\n\n                html += '<span class=\"irs-grid-text js-grid-text-' + i + '\" style=\"left: ' + big_w + '%\">' + result + '</span>';\n            }\n            this.coords.big_num = Math.ceil(big_num + 1);\n\n\n\n            this.$cache.cont.addClass(\"irs-with-grid\");\n            this.$cache.grid.html(html);\n            this.cacheGridLabels();\n        },\n\n        cacheGridLabels: function () {\n            var $label, i,\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i++) {\n                $label = this.$cache.grid.find(\".js-grid-text-\" + i);\n                this.$cache.grid_labels.push($label);\n            }\n\n            this.calcGridLabels();\n        },\n\n        calcGridLabels: function () {\n            var i, label, start = [], finish = [],\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i++) {\n                this.coords.big_w[i] = this.$cache.grid_labels[i].outerWidth(false);\n                this.coords.big_p[i] = this.toFixed(this.coords.big_w[i] / this.coords.w_rs * 100);\n                this.coords.big_x[i] = this.toFixed(this.coords.big_p[i] / 2);\n\n                start[i] = this.toFixed(this.coords.big[i] - this.coords.big_x[i]);\n                finish[i] = this.toFixed(start[i] + this.coords.big_p[i]);\n            }\n\n            if (this.options.force_edges) {\n                if (start[0] < -this.coords.grid_gap) {\n                    start[0] = -this.coords.grid_gap;\n                    finish[0] = this.toFixed(start[0] + this.coords.big_p[0]);\n\n                    this.coords.big_x[0] = this.coords.grid_gap;\n                }\n\n                if (finish[num - 1] > 100 + this.coords.grid_gap) {\n                    finish[num - 1] = 100 + this.coords.grid_gap;\n                    start[num - 1] = this.toFixed(finish[num - 1] - this.coords.big_p[num - 1]);\n\n                    this.coords.big_x[num - 1] = this.toFixed(this.coords.big_p[num - 1] - this.coords.grid_gap);\n                }\n            }\n\n            this.calcGridCollision(2, start, finish);\n            this.calcGridCollision(4, start, finish);\n\n            for (i = 0; i < num; i++) {\n                label = this.$cache.grid_labels[i][0];\n\n                if (this.coords.big_x[i] !== Number.POSITIVE_INFINITY) {\n                    label.style.marginLeft = -this.coords.big_x[i] + \"%\";\n                }\n            }\n        },\n\n        // Collisions Calc Beta\n        // TODO: Refactor then have plenty of time\n        calcGridCollision: function (step, start, finish) {\n            var i, next_i, label,\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i += step) {\n                next_i = i + (step / 2);\n                if (next_i >= num) {\n                    break;\n                }\n\n                label = this.$cache.grid_labels[next_i][0];\n\n                if (finish[i] <= start[next_i]) {\n                    label.style.visibility = \"visible\";\n                } else {\n                    label.style.visibility = \"hidden\";\n                }\n            }\n        },\n\n        calcGridMargin: function () {\n            if (!this.options.grid_margin) {\n                return;\n            }\n\n            this.coords.w_rs = this.$cache.rs.outerWidth(false);\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n                this.coords.w_handle = this.$cache.s_single.outerWidth(false);\n            } else {\n                this.coords.w_handle = this.$cache.s_from.outerWidth(false);\n            }\n            this.coords.p_handle = this.toFixed(this.coords.w_handle  / this.coords.w_rs * 100);\n            this.coords.grid_gap = this.toFixed((this.coords.p_handle / 2) - 0.1);\n\n            this.$cache.grid[0].style.width = this.toFixed(100 - this.coords.p_handle) + \"%\";\n            this.$cache.grid[0].style.left = this.coords.grid_gap + \"%\";\n        },\n\n\n\n        // =============================================================================================================\n        // Public methods\n\n        update: function (options) {\n            if (!this.input) {\n                return;\n            }\n\n            this.is_update = true;\n\n            this.options.from = this.result.from;\n            this.options.to = this.result.to;\n            this.update_check.from = this.result.from;\n            this.update_check.to = this.result.to;\n\n            this.options = $.extend(this.options, options);\n            this.validate();\n            this.updateResult(options);\n\n            this.toggleInput();\n            this.remove();\n            this.init(true);\n        },\n\n        reset: function () {\n            if (!this.input) {\n                return;\n            }\n\n            this.updateResult();\n            this.update();\n        },\n\n        destroy: function () {\n            if (!this.input) {\n                return;\n            }\n\n            this.toggleInput();\n            this.$cache.input.prop(\"readonly\", false);\n            $.data(this.input, \"ionRangeSlider\", null);\n\n            this.remove();\n            this.input = null;\n            this.options = null;\n        }\n    };\n\n    $.fn.ionRangeSlider = function (options) {\n        return this.each(function() {\n            if (!$.data(this, \"ionRangeSlider\")) {\n                $.data(this, \"ionRangeSlider\", new IonRangeSlider(this, options, plugin_count++));\n            }\n        });\n    };\n\n\n\n    // =================================================================================================================\n    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n    // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n    // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\n\n    // MIT license\n\n    (function() {\n        var lastTime = 0;\n        var vendors = ['ms', 'moz', 'webkit', 'o'];\n        for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n            window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n            window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']\n                || window[vendors[x]+'CancelRequestAnimationFrame'];\n        }\n\n        if (!window.requestAnimationFrame)\n            window.requestAnimationFrame = function(callback, element) {\n                var currTime = new Date().getTime();\n                var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n                var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n                    timeToCall);\n                lastTime = currTime + timeToCall;\n                return id;\n            };\n\n        if (!window.cancelAnimationFrame)\n            window.cancelAnimationFrame = function(id) {\n                clearTimeout(id);\n            };\n    }());\n\n}));\n"],
  "mappings": "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",
  "names": ["jQuery", "document", "window", "navigator", "plugin_count"]
}
